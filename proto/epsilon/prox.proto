syntax = "proto3";

import "epsilon/expression.proto";

// Represents a convex function of the form:
//   alpha*f(Ax + b) + c'x
// which can be evaluated with an efficient proximal operator
message ProxFunction {
  enum Function {
    UNKNOWN = 0;

    AFFINE = 1;

    // Vector norms
    NORM_1 = 2;
    NORM_2 = 3;

    // Matrix norms
    NORM_1_2 = 4;

    // Convex vector functions
    SUM_SQUARES = 5;

    // Convex matrix functions
    NEGATIVE_LOG_DET = 6;

    // Indicators of convex sets
    INDICATOR_ZERO = 7;
    INDICATOR_NON_NEGATIVE = 8;
    INDICATOR_SECOND_ORDER_CONE = 9;
   }
  Function function = 1;

  // Constant term, alpha*f(x)
  double alpha = 2;

  // Arguments to function
  repeated Expression arg = 3;

  // Affine term: f(x) + c'x
  Expression affine = 4;

  // Regularization term: f(x) + alpha||x-a||^2_2
  Expression regularization = 5;
}

message ConsensusVariable {
  string variable_id = 1;
  int32 num_instances = 2;
}

message ProxProblem {
  repeated ProxFunction prox_function = 1;
  repeated ConsensusVariable consensus_variable = 2;
  repeated Expression equality_constraint = 3;
}